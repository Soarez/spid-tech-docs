{"name":"SPP Container","version":"0.2","api":2,"object":"Utility","type":"collection","code":200,"request":{"reset":3154,"limit":360000,"remaining":359997},"debug":{"route":{"name":"List API endpoints","url":"\\\/api\\\/2\\\/endpoints","controller":"Api\\\/2\\\/Utility.endpoints"},"params":{"options":[],"where":[]}},"meta":{"count":98,"offset":0},"error":null,"data":[{"category":["Utilities","Platform API"],"name":"List API endpoints","description":"List information about all API endpoints, or get info on single endpoint (specify name or url).","path":"endpoints","pathParameters":[],"method":"GET","url":"\/api\/2\/endpoints","controller":"Api\/2\/Utility.endpoints","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["name","url"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"A list of endpoint objects","type":"[endpoint]"}]}},"parameter_descriptions":{"name":"The name of the endpoint (see the full endpoint listing for names)","url":"The url of the endpoint to describe (see the full endpoint listing for names)"}},{"category":["Utilities","Platform API"],"name":"Describe properties","description":"Describe an objects's properties, optionally translated.","path":"describe\/{object}","pathParameters":["object"],"method":"GET","url":"\/api\/2\/describe\/{object}","controller":"Api\/2\/Utility.describe","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["property","locale"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a localized description of and object's enumerable properties. If the\n                                          property parameter was provided, only this property is described. The returned\n                                          object has the property name(s) as key(s) and an object of possibles values as\n                                          keys, and localized descriptions as values.","type":"object"}]}},"parameter_descriptions":{"object":"The object to describe. Possible values:\n\n* `User`\n* `Address`\n* `Email`\n* `Phone`\n* `Product`\n* `BundleItem`\n* `Subscription`\n* `Content`\n* `Discount`\n* `Order`\n* `OrderItem`\n* `Identifier`\n* `Transaction`\n* `Campaign`\n* `Utilities`\n* `Voucher`","property":"The property to describe. To get a list of possible values, get the full description of an object.","locale":"One of the supported [locales](\/endpoints\/#locales)"}},{"category":["Utilities","Platform API"],"name":"Platform status","description":"Get status information from the platform","path":"status","pathParameters":[],"method":"*","url":"\/api\/2\/status","controller":"Api\/2\/Platform.status","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the current status of the API. ","type":"status"}]},"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the current status of the API.","type":"status"}]}},"parameter_descriptions":{}},{"category":["Utilities","Platform API"],"name":"Platform version","description":"Find out what version you are using","path":"version","pathParameters":[],"method":"GET","url":"\/api\/2\/version","controller":"Api\/2\/Platform.version","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a description of the currently deployed SPiD version","type":"version"}]}},"parameter_descriptions":{}},{"category":["Utilities","Platform API"],"name":"Platform terms","description":"Returns the current user terms for the client and SPiD","path":"terms","pathParameters":[],"method":"GET","url":"\/api\/2\/terms","controller":"Api\/2\/Platform.terms","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["client_id","oauth_token","not_accepted"],"access_token_types":["user"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The current terms, and whether they are accepted by the user, if a user token is provided.","type":"terms"}]}},"parameter_descriptions":{"client_id":"Retrieve the terms for this client. If not provided, the SPiD terms are returned.","oauth_token":"OAuth token for a user whose accepted flag should be changed","not_accepted":"Control which terms are controlled on behalf of the user. When 1, check if the user has accepted the SPiD terms. When 0, check that the user has accepted the client terms."}},{"category":["Utilities","Platform API"],"name":"Utility:qrcode","description":"","path":"qrcode","pathParameters":[],"method":"GET","url":"\/api\/2\/qrcode","controller":"Api\/2\/Utility.qrcode","default_output_format":"json","valid_output_formats":["json","png"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["type","content","w","h"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"type":"","content":"","w":"","h":""}},{"category":["Authorization","OAuth"],"name":"Exchange","description":"Exchanges an authorization code","path":"oauth\/exchange","pathParameters":[],"method":"POST","url":"\/api\/2\/oauth\/exchange","controller":"Api\/2\/Authorization.exchange","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":["clientId","type"],"optional":["redirectUri"],"access_token_types":["user"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"OAuth exchange object","type":"exchange"}]}},"parameter_descriptions":{"clientId":"The ID of a client belonging to the same merchant as the calling client.","type":"The type of exchange. `code` is the only supported type.","redirectUri":"The redirect URI must be a registered redirectUri, otherwise the request will be rejected."}},{"category":["Utilities","Platform API"],"name":"Shorten or lengthen URL","description":"Create, and expand, short version of URIs","path":"url\/{action}","pathParameters":["action"],"method":"GET","url":"\/api\/2\/url\/{id}","controller":"Api\/2\/Utility.url","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":["url"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"action":"id\/action er det samme","url":""}},{"category":["Utilities","Sysadmin API"],"name":"Utility:adminBySection","description":"Get list of roles {section}=roles, or acl, {section}=acl","path":"admin\/{section}","pathParameters":["section"],"method":"GET","url":"\/api\/2\/admin\/{section}","controller":"Api\/2\/Utility.admin","default_output_format":"json","valid_output_formats":["json","jsonp","png"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"section":""}},{"category":["Utilities","Sysadmin API"],"name":"Utility:aclForRole","description":"Specify a role (ie `watcher`, `admin`) and get acl list","path":"admin\/acl\/{role}","pathParameters":["role"],"method":"GET","url":"\/api\/2\/admin\/{section}\/{id}","controller":"Api\/2\/Utility.admin","default_output_format":"json","valid_output_formats":["json","jsonp","png"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"role":""}},{"category":["Identity Management","Email API"],"name":"Email templates","description":"Get and Set email templates","path":"email_templates","pathParameters":[],"method":"*","url":"\/api\/2\/email_templates","controller":"Api\/2\/Utility.email_templates","default_output_format":"json","valid_output_formats":["json","jsonp","xml"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["locale"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns all the email templates used by the system.","type":"email-template-collection"}]},"POST":{"name":"POST","required":["templates"],"optional":["locale"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"email-template-collection"}]}},"parameter_descriptions":{"locale":"The email template [locale](\/endpoints\/#locale)","templates":""}},{"deprecated":"2.10","category":["Data Storage","SODA Endpoints"],"name":"Create, get or delete data objects by type, ID and key","description":"Data storage endpoint. NB! POST does not work with explorer.","path":"{type}\/{id}\/do\/{key}","pathParameters":["type","id","key"],"method":"*","url":"\/api\/2\/{type}\/{id}\/do\/{key}","controller":"Api\/2\/Data.soda","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves a previously stored data object. The data object structure is defined by the client who stored it.","type":"object"}]},"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The newly created data object","type":"object"}]}},"parameter_descriptions":{"type":"The base API type to associate data with. One of `user`, `product`, `order`, `discount` or `client`.","id":"The ID of the object to associate data with.","key":"The unique key of the data object."}},{"deprecated":"2.10","category":["Data Storage","SODA Endpoints"],"name":"Get or create data objects by type, sub type, ID and key","description":"Data storage sub endpoint. NB POST does not work with explorer","path":"{type}\/{id}\/{subtype}\/{subid}\/do\/{key}","pathParameters":["type","id","subtype","subid","key"],"method":"*","url":"\/api\/2\/{type}\/{id}\/{subtype}\/{subid}\/do\/{key}","controller":"Api\/2\/Data.soda","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves a previously stored data object. The data object structure is defined by the client who stored it.","type":"object"}]},"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The newly created data object.","type":"object"}]}},"parameter_descriptions":{"type":"The base API type to associate data with. One of `user`, `product`, `order`, `discount` or `client`.","id":"The ID of the object to associate data with.","subtype":"??","subid":"??","key":"The unique key of the data object."}},{"category":["Data Storage","DataObjects API"],"name":"Get, update, and delete data objects by user","description":"User data storage.","path":"user\/{id}\/dataobject\/{key}","pathParameters":["id","key"],"method":"*","url":"\/api\/2\/user\/{id}\/dataobject\/{key}","controller":"Api\/2\/DataObject.user_dataobject","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves the data object stored under this key for this user. The format of the data object is entirely dictated by the client and may be of any type.","type":"data-object"},{"status":404,"description":"No data object found.","type":"api-exception"}]},"POST":{"name":"POST","required":["value"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The newly created data object.","type":"data-object"},{"status":500,"description":"Error during save.","type":"data-object"}]},"DELETE":{"name":"DELETE","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns an object indicating whether or not deleting was successful.","type":"success-indicator"},{"status":400,"description":"Parameters missing","type":"api-exception"},{"status":500,"description":"Error during delete","type":"api-exception"}]}},"parameter_descriptions":{"id":"ID of the user to associate data with","key":"The data object key. Max length is 255 bytes.","value":"Data of any kind. Max length is 65535 bytes."}},{"category":["Data Storage","DataObjects API"],"name":"List data objects by user","description":"List data objects stored for a user.","path":"user\/{id}\/dataobjects","pathParameters":["id"],"method":"*","url":"\/api\/2\/user\/{id}\/dataobjects","controller":"Api\/2\/DataObject.user_dataobjects","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["key","limit","since","offset","until","sort","filters"],"access_token_types":["server"],"filters":["merchant","updated"],"default_filters":[],"responses":[{"status":200,"description":"Retrieves all data objects associated with this user.","type":"{dataObjectId data-object}"},{"status":400,"description":"Missing parameters","type":"api-exception"},{"status":404,"description":"No data objects found","type":"api-exception"}]}},"parameter_descriptions":{"id":"ID of the user the data is associated with","key":"Only show data for this key. Supports [multiple values](\/endpoints\/#params).","sort":""}},{"category":["Data Storage","DataObjects API"],"name":"List","description":"Data storage list endpoint.","path":"dataobjects","pathParameters":[],"method":"*","url":"\/api\/2\/dataobjects","controller":"Api\/2\/DataObject.dataobjects","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["key","limit","since","offset","until","sort","filters"],"access_token_types":["server"],"filters":["merchant","updated"],"default_filters":[],"responses":[{"status":200,"description":"Retrieves a single data object.","type":"{dataObjectId data-object}"},{"status":404,"description":"No data objects found","type":"api-exception"}]}},"parameter_descriptions":{"key":"The client-provided data object key. Supports [multiple values](\/endpoints\/#params).","sort":""}},{"category":["Identity Management","Email API"],"name":"Status","description":"Get verification and availability status for an email address.","path":"email\/{email}\/status","pathParameters":["email"],"method":"GET","url":"\/api\/2\/email\/{email}\/status","controller":"Api\/2\/Email.email_status","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a status description.","type":"email-status"},{"status":400,"description":"Missing parameter email","type":"api-exception"}]}},"parameter_descriptions":{"email":"The email to query status for."}},{"category":["Identity Management","User API"],"name":"Me","description":"Fetch the authorized requesting user.","path":"me","pathParameters":[],"method":"GET","url":"\/api\/2\/me","controller":"Api\/2\/User.me","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["user"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The user object","type":"user"}]}},"parameter_descriptions":{}},{"category":["Payment Services","Voucher API"],"name":"My vouchers","description":"Get the vouchers for the requesting user ","path":"me\/vouchers","pathParameters":[],"method":"GET","url":"\/api\/2\/me\/vouchers","controller":"Api\/2\/User.my_vouchers","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["user"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of vouchers","type":"[voucher]"}]}},"parameter_descriptions":{}},{"category":["Identity Management","User API"],"name":"Create user","description":"Create a new user","path":"user","pathParameters":[],"method":"POST","url":"\/api\/2\/user","controller":"Api\/2\/User.user","default_output_format":"json","valid_output_formats":["json","jsonp","png"],"httpMethods":{"POST":{"name":"POST","required":["email"],"optional":["displayName","name","birthday","addresses","gender","photo","preferredUsername","url","utcOffset","redirectUri"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":201,"description":"Returns the newly created user object.","type":"user"}]}},"parameter_descriptions":{"displayName":"The user's preferred display name","name":"Full name","birthday":"The date of birth, YYYY-MM-DD","addresses":"TODO - array med adresse-objekter?","gender":"Gender. Legal values and a localized description can be fetched from [\/api\/2\/describe\/User?property=gender](\/endpoints\/GET\/describe\/{object}).","photo":"TODO - URL?","preferredUsername":"The user's preferred user name","url":"An external URL related to the user","utcOffset":"The user's timezone, given as UTC offset (number of hours) TODO: rent tall (2, -3 osv), eller streng? \"+02:00\" osv","redirectUri":"TODO"}},{"category":["Identity Management","User API"],"name":"Signup","description":"Create a new user (no update)","path":"signup","pathParameters":[],"method":"POST","url":"\/api\/2\/signup","controller":"Api\/2\/User.user_signup","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":["email"],"optional":["password","redirectUri"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the new user","type":"user"}]}},"parameter_descriptions":{"email":"Email of the user. Must be unique across all of SPiD","password":"Desired password","redirectUri":"Where to redirect the user after completing signup"}},{"category":["Identity Management","User API"],"name":"Signup JWT","description":"Create a new user (no update) from a JWT","path":"signup_jwt","pathParameters":[],"method":"POST","url":"\/api\/2\/signup_jwt","controller":"Api\/2\/User.user_signup_jwt","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":["jwt"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"jwt":""}},{"category":["Identity Management","User API"],"name":"Attach JWT","description":"Attaches a thirdparty account from a JWT to a user","path":"attach_jwt","pathParameters":[],"method":"POST","url":"\/api\/2\/user\/attach_jwt","controller":"Api\/2\/User.user_attach_jwt","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":["jwt"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"jwt":""}},{"category":["Identity Management","User API"],"name":"Get Varnish id","description":"Get the varnish ID for a user","path":"user\/{userId}\/varnishId","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/varnishId","controller":"Api\/2\/User.user_varnish","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns an object that contains the SP_ID.","type":"varnish-id"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`)."}},{"category":["Identity Management","User API"],"name":"Get and update users","description":"Get a user data object or post changes to one.","path":"user\/{userId}","pathParameters":["userId"],"method":"*","url":"\/api\/2\/user\/{id}","controller":"Api\/2\/User.user","default_output_format":"json","valid_output_formats":["json","jsonp","png"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the user object.","type":"user"},{"status":404,"description":"The `userId` was not found","type":"api-exception"}]},"POST":{"name":"POST","required":[],"optional":["displayName","name","birthday","addresses","gender","photo","preferredUsername","url","utcOffset"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated user object.","type":"user"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","displayName":"New preferred display name","name":"New full name","birthday":"New date of birth, YYYY-MM-DD","addresses":"TODO","gender":"New gender. Legal values and a localized description can be fetched from [\/api\/2\/describe\/User?property=gender](\/endpoints\/GET\/describe\/{object}).","photo":"TODO - URL?","preferredUsername":"New preferred user name","url":"New external URL related to the user","utcOffset":"New timezone, given as UTC offset (number of hours) TODO: rent tall (2, -3 osv), eller streng? \"+02:00\" osv","redirectUri":"TODO"}},{"category":["Payment Services","Direct Payment API"],"name":"Direct payment charge","description":"Request a direct payment charge on a user.","path":"user\/{userId}\/charge","pathParameters":["userId"],"method":"POST","url":"\/api\/2\/user\/{id}\/charge","controller":"Api\/2\/User.user_charge","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":["hash","requestReference","items"],"optional":["clientReference","paymentOptions","purchaseFlow","sellerUserId","tag","type"],"access_token_types":["server"],"filters":["identifier","items","transactions"],"default_filters":[],"responses":[{"status":201,"description":"Returns the order object","type":"order"},{"status":304,"description":"API error code 2000, The user cancelled the request.","type":"api-exception"},{"status":400,"description":"API error code 1800, The request is invalid and can not be completed.","type":"api-exception"},{"status":400,"description":"API error code 1810, The request parameters are invalid.","type":"api-exception"},{"status":403,"description":"API error code 1100, The account or card is blocked in the provider.","type":"api-exception"},{"status":403,"description":"API error code 1200, The user is blacklisted.","type":"api-exception"},{"status":403,"description":"API error code 1300, The method (card) is not eligible for this purchase.","type":"api-exception"},{"status":403,"description":"API error code 1400, The method (card) is blacklisted.","type":"api-exception"},{"status":406,"description":"API error code 2100, The payment request was flagged by automatic fraud detection.","type":"api-exception"},{"status":412,"description":"API error code 1700, The payment request does not conform to the prerequisites (i.e. wrong order status)","type":"api-exception"},{"status":412,"description":"API error code 110, Payment method missing. The method (card) is not eligible for payment because it is missing, i.e., the user has not entered a payment method into their SPiD account.","type":"api-exception"},{"status":412,"description":"API error code 120, Payment method expired. The method (card) is not eligible for payment because it is expired.","type":"api-exception"},{"status":412,"description":"API error code 210, Direct payment disabled. Direct payment is disabled for the client or the SPiD service as a whole.","type":"api-exception"},{"status":416,"description":"API error code 1900, The payment request failed due to insufficient funds on account.","type":"api-exception"},{"status":420,"description":"API error code 2200, The payment request was flagged by automatic API abuse detection.","type":"api-exception"},{"status":420,"description":"API error code 310, Transaction amount limit exceeded.","type":"api-exception"},{"status":420,"description":"API error code 320, Transaction count limit exceeded.","type":"api-exception"},{"status":420,"description":"API error code 330, Time since last transaction is too short.","type":"api-exception"},{"status":420,"description":"API error code 340, Too many failures.","type":"api-exception"},{"status":503,"description":"API error code 1500, SPiD\/Payment provider is currently experiencing problems.","type":"api-exception"},{"status":503,"description":"API error code 1600, Payment provider is unavailable to SPiD.","type":"api-exception"},{"status":503,"description":"API error code 9900, The error could not be categorized.","type":"api-exception"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","clientReference":"Custom client reference","paymentOptions":"[Payment options](\/types\/payment-options), as a bit mask","purchaseFlow":"`\"DIRECT\"` or `\"AUTHORIZE\"`. Defaults to `\"DIRECT\"`","sellerUserId":"If set, money will be transferred to this user. The receiving user will be charged a few TODO (??)","tag":"To be used for tracking. Will be returned in all order endpoints","type":"[Order type](\/types\/order-type)"}},{"category":["Payment Services","Direct Payment API"],"name":"Account balance","description":"Retrieve account balance for a user.","path":"user\/{userId}\/balance","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/balance","controller":"Api\/2\/User.user_balance","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"userId":""}},{"category":["Payment Services","Direct Payment API"],"name":"Payment settings","description":"Request payment settings for a user.","path":"user\/{userId}\/payment\/settings","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/payment\/settings","controller":"Api\/2\/User.user_payment_settings","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"userId":""}},{"category":["Payment Services","Direct Payment API"],"name":"Payment preference","description":"Request the payment preferences for direct payment charges on a user.","path":"user\/{userId}\/preferences\/payment","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/preferences\/payment","controller":"Api\/2\/User.user_preferences_payment","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves the payment preference object.","type":"payment-preference"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`)."}},{"category":["Identity Management","User API"],"name":"List users","description":"List for users","path":"users","pathParameters":[],"method":"GET","url":"\/api\/2\/users","controller":"Api\/2\/User.users","default_output_format":"json","valid_output_formats":["json","jsonp","png"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","since","offset","until","fields","sort","filters","id","userId","email","emails","emails_regex","displayName","givenName","familyName","fullName","preferredUsername","phoneNumber","phoneNumbers","gender","birthday","address_formatted","address_postalCode","address_country","address_region","address_locality","address_streetAddress","orderId","paymentIdentifier"],"access_token_types":["server"],"filters":["updated","verified","unverified","inactive blocked","deleted","facebook","google","live","imported","merchant"],"default_filters":["verified","unverified"],"responses":[{"status":200,"description":"Returns all users matched by the query.","type":"[user]"},{"status":404,"description":"No users found","type":"api-exception"}]}},"parameter_descriptions":{"fields":"A [list of fields](\/endpoints\/#parameters) to select, makes for a slimmer response.","id":"Exact match.","userId":"Exact match.","email":"Exact match for the primary email.","emails":"Exact match for either the primary or one of the secondary emails.","emails_regex":"Regexp search all emails.","displayName":"Sub-string match from the beginning of the displayName","givenName":"Sub-string match from the beginning of the given name","familyName":"Sub-string match from the beginning of the family name","fullName":"Sub-string match from the beginning of the given name and family name combined","preferredUsername":"Sub-string match from the beginning of the preferred user name","phoneNumber":"Sub-string match from the beginning of the primary phone number","phoneNumbers":"Sub-string match from the beginning of any phone number","gender":"Exact match (male, female, undisclosed)","birthday":"Regex search.","address_formatted":"Regex search.","address_postalCode":"Exact match.","address_country":"Exact match.","address_region":"Regex search.","address_locality":"Regex search.","address_streetAddress":"Regex search.","orderId":"TODO","paymentIdentifier":"TODO"}},{"category":["Identity Management","User API"],"name":"Search users","description":"Search for users by individual attributes and\/or full-text","path":"search\/users","pathParameters":[],"method":"GET","url":"\/api\/2\/search\/users","controller":"Api\/2\/Search.search_users","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters","clientId","query","id","userId","email","displayName","givenName","familyName","fullName","preferredUsername","gender","birthyear","emails","phoneNumber","phoneNumbers","address","homeAddress","invoiceAddress","deliveryAddress","status"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of users","type":"[user]"}]}},"parameter_descriptions":{"clientId":"","query":"","id":"","userId":"","email":"","displayName":"","givenName":"","familyName":"","fullName":"","preferredUsername":"","gender":"","birthyear":"","emails":"","phoneNumber":"","phoneNumbers":"","address":"","homeAddress":"","invoiceAddress":"","deliveryAddress":"","status":""}},{"deprecated":"2.10","category":["Identity Management","User API"],"name":"User full-text search","description":"Full-text search for users. Use \/search\/users instead.","path":"search\/users\/{query}","pathParameters":["query"],"method":"GET","url":"\/api\/2\/search\/users\/{query}","controller":"Api\/2\/Search.search_users","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters","clientId"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of users","type":"[user]"}]}},"parameter_descriptions":{"filters":"","clientId":"","query":"Full-text search query"}},{"category":["Identity Management","Login API"],"name":"List logins","description":"List all (or search for) logins for a user","path":"user\/{userId}\/logins","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/logins","controller":"Api\/2\/User.user_logins","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","since","offset","until","ip","status"],"access_token_types":["server"],"filters":["merchant"],"default_filters":[],"responses":[{"status":200,"description":"A list of login attempt objects","type":"[login-attempt]"}]}},"parameter_descriptions":{"userId":"The user's userId (not to be mistaken with the deprecated `id`)","ip":"Filter by login attempts from this IP address","status":"Filter by successful (`true`) or failed (`false`) logins"}},{"category":["Identity Management","User API"],"name":"Trigger","description":"Trigger a `newpassword` or `emailverification` for user","path":"user\/{userId}\/trigger\/{trigger}","pathParameters":["userId","trigger"],"method":"GET","url":"\/api\/2\/user\/{id}\/trigger\/{trigger}","controller":"Api\/2\/User.user_trigger","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":201,"description":"Returns an indication of whether or not the trigger was sent successfully.","type":"success-indicator"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","trigger":"What kind of email trigger to send. Currently only two options:\n\n* `emailverification` - Sends an email to the user, asking them to verify their email address.\n* `newpassword` - Sends an email to the user with a link to create a new password. The password reset link is valid for 24 hours."}},{"category":["Payment Services","Order API"],"name":"Get order","description":"Get a single order for user.","path":"user\/{userId}\/order\/{orderId}","pathParameters":["userId","orderId"],"method":"GET","url":"\/api\/2\/user\/{id}\/order\/{<\\d+>order_id}","controller":"Api\/2\/User.user_order","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns an order object","type":"order"}]}},"parameter_descriptions":{"userId":"Find the user with this `userId` (not to be mistaken with the deprecated `id`).","orderId":"ID of the order to retrieve"}},{"category":["Payment Services","Order API"],"name":"List orders","description":"List orders for a user (on client)","path":"user\/{userId}\/orders","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/orders","controller":"Api\/2\/User.user_orders","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["status","filters"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Return a list of orders","type":"[order]"}]}},"alias":{"id":"user_id"},"parameter_descriptions":{"userId":"List orders for the user with this `userId` (not to be mistaken with the deprecated `id`).","status":"Filter results by this status","filters":""}},{"deprecated":"2.10","category":["Payment Services","Order API"],"name":"Credit user order","description":"Deprecated! Use \/order\/{orderId}\/credit","path":"user\/{userId}\/order\/{orderId}\/credit","pathParameters":["userId","orderId"],"method":"POST","url":"\/api\/2\/user\/{id}\/order\/{<\\d+>order_id}\/credit","controller":"Api\/2\/User.user_order_credit","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"userId":"Credit order for user with this `userId` (not to be mistaken with the deprecated `id`).","orderId":""}},{"category":["Payment Services","Order API"],"name":"List user transactions","description":"List all money transactions related to a user","path":"user\/{userId}\/transactions","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/transactions","controller":"Api\/2\/User.user_transactions","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of transactions.","type":"[transaction]"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`)."}},{"category":["Payment Services","Subscription API"],"name":"Create user subscription","description":"Create a new user subscription for a user","path":"user\/{userId}\/subscription","method":"POST","url":"\/api\/2\/user\/{id}\/subscription","pathParameters":["userId"],"controller":"Api\/2\/User.user_subscription","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["productId"],"optional":["startDate","orderId","expires"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":201,"description":"Returns the newly created subscription object","type":"subscription"}]}},"parameter_descriptions":{"userId":"Create subscription for the user with this `userId` (not to be mistaken with the deprecated `id`).","productId":"The product to subscribe the user to","startDate":"The date from when the subscription is valid","orderId":"TODO","expires":"The date\/time (`YYYY-MM-DD HH:MM:SS`), or the number of seconds from now when the subscription expires"}},{"category":["Payment Services","Subscription API"],"name":"Manage user subscription","description":"Get, Update or (soft)delete a User subscription.","path":"user\/{userId}\/subscription\/{subscriptionId}","pathParameters":["userId","subscriptionId"],"method":"*","url":"\/api\/2\/user\/{id}\/subscription\/{<\\d+>subscription_id}","controller":"Api\/2\/User.user_subscription","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the subscription object","type":"subscription"},{"status":404,"description":"No such subscription","type":"api-exception"}]},"POST":{"name":"POST","required":["autoRenew"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated subscription object","type":"subscription"}]},"DELETE":{"name":"DELETE","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the expired subscription object","type":"subscription"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","subscriptionId":"","autoRenew":"\"1\", to enable auto-renewal, \"0\" to disable"}},{"category":["Payment Services","Subscription API"],"name":"List subscriptions","description":"List all subscriptions (on client) for user","path":"user\/{userId}\/subscriptions","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/user\/{id}\/subscriptions","controller":"Api\/2\/User.user_subscriptions","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves all subscriptions for user.","type":"{subscriptionId subscription}"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`)."}},{"category":["Payment Services","Digital Contents API"],"name":"Manage digital content access","description":"Manage user access to a product.","path":"user\/{userId}\/product\/{productId}","pathParameters":["userId","productId"],"method":"*","url":"\/api\/2\/user\/{id}\/product\/{product_id}","controller":"Api\/2\/User.user_product","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters"],"access_token_types":["server"],"filters":["merchant"],"default_filters":[],"responses":[{"status":200,"description":"Returns a description of the user's access. Crucially, the `result` property will be `true` if the user has access.","type":"user-product-access"}]},"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Grant a user access to a product","type":"user-product-access"}]},"DELETE":{"name":"DELETE","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Revoke a user's access to a product","type":"success-indicator"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","productId":"ID of a product or subscription. Since version 2.9, this may also be a product alias, in which case you should also use the `merchant` filter."}},{"category":["Payment Services","Digital Contents API"],"name":"List contents","description":"List all contents (on client) that user has access to.","path":"user\/{userId}\/products","pathParameters":["userId"],"method":"*","url":"\/api\/2\/user\/{id}\/products","controller":"Api\/2\/User.user_products","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters"],"access_token_types":["server"],"filters":["all","none","active","expired"],"default_filters":["active"],"responses":[{"status":200,"description":"","type":"{productId digital-content}"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`)."}},{"category":["Data Storage","Traits API"],"name":"Delete user trait","description":"Delete current trait from user.","path":"user\/{userId}\/trait\/{trait}","pathParameters":["userId","trait"],"method":"*","url":"\/api\/2\/user\/{id}\/trait\/{trait}","controller":"Api\/2\/User.user_trait","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"DELETE":{"name":"DELETE","required":["trait"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the remaining traits for the user","type":"object"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","trait":"The key of the trait to delete"}},{"category":["Data Storage","Traits API"],"name":"List and manage user traits","description":"List\/Add\/Update the currently saved traits added to the user by the asking client.","path":"user\/{userId}\/traits","pathParameters":["userId"],"method":"*","url":"\/api\/2\/user\/{id}\/traits","controller":"Api\/2\/User.user_traits","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["key"],"access_token_types":["user","server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns an object of traits. Traits are arbitrary key\/value pairs.","type":"object"}]},"POST":{"name":"POST","required":["traits"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated traits","type":"object"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","key":"The trait key to set value for","traits":"A JSON string of traits to add"}},{"deprecated":"2.10","category":["Insight","Report Database API"],"name":"List dumps","description":"Get a list of available dumps from the reports database.","path":"reports\/dumps","pathParameters":[],"method":"GET","url":"\/api\/2\/reports\/dumps","controller":"Api\/2\/Reports.dumps","default_output_format":"json","valid_output_formats":["json","jsonp","xml"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of dump descriptions","type":"[dump-description]"}]}},"parameter_descriptions":{}},{"deprecated":"2.10","category":["Insight","Report Database API"],"name":"Get dump","description":"Gets the dump with the given ID in a tarball (a zipped tar).","path":"reports\/dump\/{id}","pathParameters":["id"],"method":"GET","url":"\/api\/2\/reports\/dump\/{id}","controller":"Api\/2\/Reports.dump","default_output_format":"tgz","valid_output_formats":["json","tgz"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"id":""}},{"deprecated":"2.10","category":["Insight","Report Database API"],"name":"Get report","description":"Gets the report with the given id. Products is options and should be comma-separeted.","path":"reports\/template\/{template}","pathParameters":["template"],"method":"GET","url":"\/api\/2\/reports\/template\/{template}","controller":"Api\/2\/Reports.report_from_template","default_output_format":"json","valid_output_formats":["json","jsonp","csv"],"httpMethods":{"GET":{"name":"GET","required":["from","to"],"optional":["products"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"template":"","from":"","to":"","products":""}},{"category":["Identity Management","User API"],"name":"Anonymous:users","description":"Get all anonymous user objects changed in the given period","path":"anonymous\/users","pathParameters":[],"method":"GET","url":"\/api\/2\/anonymous\/users","controller":"Api\/2\/anonymous.anonymous_users","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["since","until","offset"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{}},{"category":["Payment Services","Discount API"],"name":"Add discount","description":"Create a new discount","path":"discount","pathParameters":[],"method":"POST","url":"\/api\/2\/discount","controller":"Api\/2\/Discount.discount","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["name","description","type","value","end_time"],"optional":["currency","redeem_limit","start_time","status","product_id"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"name":"","description":"","type":"","value":"","end_time":"","currency":"","redeem_limit":"","start_time":"","status":"","product_id":""}},{"category":["Payment Services","Discount API"],"name":"Get discount","description":"Get a single discount and update","path":"discount\/{id}","pathParameters":["id"],"method":"*","url":"\/api\/2\/discount\/{id}","controller":"Api\/2\/Discount.discount","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]},"POST":{"name":"POST","required":[],"optional":["product_id","name","description","type","value","currency","redeem_limit","start_time","end_time","status"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"id":"","product_id":"","name":"","description":"","type":"","value":"","currency":"","redeem_limit":"","start_time":"","end_time":"","status":""}},{"category":["Payment Services","Discount API"],"name":"List discounts","description":"List all discounts for client","path":"discounts","pathParameters":[],"method":"GET","url":"\/api\/2\/discounts","controller":"Api\/2\/Discount.discounts","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{}},{"category":["Utilities","Platform API"],"name":"List clients","description":"List all clients","path":"clients","pathParameters":[],"method":"GET","url":"\/api\/2\/clients","controller":"Api\/2\/Client.clients","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"{clientId client}"}]}},"parameter_descriptions":{}},{"category":["Payment Services","Product API"],"name":"Get product settings","description":"Get the client's product settings","path":"productsettings","pathParameters":[],"method":"GET","url":"\/api\/2\/productsettings","controller":"Api\/2\/Client.productsettings","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Retrieves the current product setting values.","type":"product-settings"}]}},"parameter_descriptions":{}},{"category":["Payment Services","Order API"],"name":"Search orders","description":"Search for orders","path":"orders","pathParameters":[],"method":"GET","url":"\/api\/2\/orders","controller":"Api\/2\/Order.orders","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","offset","sort","filters","since","until","userId","status","ocr","orderId","clientReference"],"access_token_types":["server"],"filters":["all","none","purchases","renews","transfers","repurchases","expired","cancelled","failed","created","pending","completed","credited","authorized","merchant","transactions","items","identifier"],"default_filters":["completed","credited"],"responses":[{"status":200,"description":"Returns a list of order objects","type":"[order]"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","status":"[One or more](\/endpoints\/#params) [statuses](\/types\/order-status) to filter results by","ocr":"Filter results by OCR\/KID number","orderId":"Show this specific order","clientReference":"Filter by custom client reference"}},{"category":["Payment Services","Order API"],"name":"Get order","description":"Get a single order record","path":"order\/{orderId}","pathParameters":["orderId"],"method":"GET","url":"\/api\/2\/order\/{id}","controller":"Api\/2\/Order.order","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters"],"access_token_types":["server"],"filters":["items","transactions","identifier"],"default_filters":[],"responses":[{"status":200,"description":"Returns the order object. Depending on the filters used, order items, transactions and payment identifier may also be included in the response object.","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of order to show"}},{"category":["Payment Services","Order API"],"name":"Get order transactions","description":"Get all transactions for one order","path":"order\/{orderId}\/transactions","pathParameters":["orderId"],"method":"GET","url":"\/api\/2\/order\/{id}\/transactions","controller":"Api\/2\/Order.order_transactions","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of order items","type":"[transaction]"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to retrieve transactions for"}},{"category":["Payment Services","Order API"],"name":"Get order items","description":"Get all items (bought products) on one order","path":"order\/{orderId}\/items","pathParameters":["orderId"],"method":"GET","url":"\/api\/2\/order\/{id}\/items","controller":"Api\/2\/Order.order_items","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of order items","type":"[order-item]"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to retrieve order items for"}},{"category":["Payment Services","Order API"],"name":"Order status","description":"Check the status of an order","path":"order\/{orderId}\/status","pathParameters":["orderId"],"method":"GET","url":"\/api\/2\/order\/{id}\/status","controller":"Api\/2\/Order.order_status","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated order object","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to retrieve"}},{"category":["Payment Services","Order API"],"name":"Cancel order","description":"Cancel an order (for use with paylinks and multistep payment flow)","path":"order\/{orderId}\/cancel","pathParameters":["orderId"],"method":"POST","url":"\/api\/2\/order\/{id}\/cancel","controller":"Api\/2\/Order.order_cancel","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the cancelled order object","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"The order to cancel"}},{"category":["Payment Services","Order API"],"name":"Credit order","description":"Credit an order (for use with paylinks and multistep payment flow)","path":"order\/{orderId}\/credit","pathParameters":["orderId"],"method":"POST","url":"\/api\/2\/order\/{id}\/credit","controller":"Api\/2\/Order.order_credit","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["description"],"optional":["amount","orderItemId","notifyUser"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the order object with its transactions","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to credit","description":"A description of the credit transaction","amount":"The amount to credit, in cents","orderItemId":"The single order item to credit, if any","notifyUser":"If 1, the user will be notified, otherwise they will not be notified"}},{"category":["Payment Services","Order API"],"name":"Complete order","description":"Complete an order (for use with multistep payment flow, requires captures)","path":"order\/{orderId}\/complete","pathParameters":["orderId"],"method":"POST","url":"\/api\/2\/order\/{id}\/complete","controller":"Api\/2\/Order.order_complete","default_output_format":"json","valid_output_formats":["json"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the completed order","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to complete"}},{"category":["Payment Services","Order API"],"name":"Capture order","description":"Capture part or whole of an authorized amount from an order (for use with multistep payment flow)","path":"order\/{orderId}\/capture","pathParameters":["orderId"],"method":"POST","url":"\/api\/2\/order\/{id}\/capture","controller":"Api\/2\/Order.order_capture","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":["amount","orderItemId","description"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the order object, with transactions","type":"order"}]}},"alias":{"id":"order_id"},"parameter_descriptions":{"orderId":"ID of the order to capture","amount":"The amount to capture, in cents","orderItemId":"The order item to capture","description":"A description of the transaction"}},{"category":["Payment Services","Product API"],"name":"Search products","description":"Search for products (for client)","path":"products","pathParameters":[],"method":"GET","url":"\/api\/2\/products","controller":"Api\/2\/Product.products","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["filters","productId","name","code","price","parentProductId","limit","offset","since","until","sort"],"access_token_types":["server"],"filters":["content","subscriptions","deleted","unavailable","invisible","unselectable","available","bundle"],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of products.","type":"[product]"}]}},"parameter_descriptions":{"productId":"Only list this particular product","name":"TODO - exact?","code":"TODO - exact?","price":"TODO - exact?","parentProductId":"List all products with this parent product"}},{"category":["Payment Services","Product API"],"name":"Create product","description":"Create a new product template","path":"product","pathParameters":[],"method":"POST","url":"\/api\/2\/product","controller":"Api\/2\/Product.product","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["code","name","price","vat","paymentOptions","type","currency"],"optional":["bundle","hideItems","status","parentProductId","description","url","quantityLimit","saleStart","saleStop","availableStart","availableStop","allowMultiSales","subscriptionPeriod","subscriptionRenewPrice","subscriptionRenewPeriod","subscriptionAutoRenew","subscriptionAutoRenewLockPeriod","subscriptionAutoRenewDisabled","subscriptionGracePeriod","subscriptionEmailReceiptLimit","subscriptionFinalEndDate","subscriptionSurveyUrl"],"access_token_types":["server"],"filters":["merchant"],"default_filters":[],"responses":[{"status":201,"description":"Returns the newly created product","type":"product"}]}},"parameter_descriptions":{"code":"TODO","name":"The product name","price":"Price, in cents","vat":"VAT, in cents","paymentOptions":"A [payment options bitmask](\/types\/payment-options)","type":"The [product type](\/types\/product-type)","currency":"The price and VAT currency","bundle":"TODO","hideItems":"TODO","status":"The [product status](\/types\/product-status)","parentProductId":"ID of the parent product, if any","description":"","url":"","quantityLimit":"If there is a limited supply for this product","saleStart":"Provide if there is a sale of some sort","saleStop":"Provide if there is a sale of some sort","availableStart":"The time from when the product is available for sale ([date time](\/types\/datetime))","availableStop":"The time when the product is no longer available for sale ([date time](\/types\/datetime))","allowMultiSales":"\"1\" if a user is allowed to purchase this product multiple times, \"0\" otherwise","subscriptionPeriod":"The duration of a subscription period, as a timestamp in seconds","subscriptionRenewPrice":"Price of subscription renewals, in cents","subscriptionRenewPeriod":"The duration of a renewal","subscriptionAutoRenew":"\"1\" if the subscription should automatically renew, \"0\" otherwise","subscriptionAutoRenewLockPeriod":"The duration of the initial period where auto renewal cannot be changed","subscriptionAutoRenewDisabled":"\"1\" if automatic renewals should not be available, \"0\" if they should","subscriptionGracePeriod":"The duration after a failed charge attempt the subscription stays active","subscriptionEmailReceiptLimit":"TODO","subscriptionFinalEndDate":"A date from when this product is no longer for sale","subscriptionSurveyUrl":"A survey about this product TODO"}},{"category":["Payment Services","Product API"],"name":"Get\/update product","description":"Get a single product template","path":"product\/{id}","pathParameters":["id"],"method":"*","url":"\/api\/2\/product\/{id}","controller":"Api\/2\/Product.product","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the full product description","type":"product"}]},"POST":{"name":"POST","required":[],"optional":["name","description","price","vat","paymentOptions","url","quantityLimit","status","availableStart","availableStop","saleStart","saleStop","hideItems","allowMultiSales","subscriptionPeriod","subscriptionRenewPrice","subscriptionRenewPeriod","subscriptionAutoRenew","subscriptionAutoRenewLockPeriod","subscriptionAutoRenewDisabled","subscriptionGracePeriod","subscriptionEmailReceiptLimit","subscriptionFinalEndDate","subscriptionSurveyUrl"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated product object.","type":"product"}]}},"parameter_descriptions":{"id":"","name":"","description":"","price":"","vat":"","paymentOptions":"","url":"","quantityLimit":"","status":"","availableStart":"","availableStop":"","saleStart":"","saleStop":"","hideItems":"","allowMultiSales":"","subscriptionPeriod":"","subscriptionRenewPrice":"","subscriptionRenewPeriod":"","subscriptionAutoRenew":"","subscriptionAutoRenewLockPeriod":"","subscriptionAutoRenewDisabled":"","subscriptionGracePeriod":"","subscriptionEmailReceiptLimit":"","subscriptionFinalEndDate":"","subscriptionSurveyUrl":""}},{"category":["Payment Services","Product API"],"name":"Product children","description":"Get all product \"children\" of a product template","path":"product\/{productId}\/children","pathParameters":["productId"],"method":"GET","url":"\/api\/2\/product\/{id}\/children","controller":"Api\/2\/Product.product_children","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":["content","subscriptions","deleted","unavailable","invisible","unselectable","available","bundle"],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of products","type":"[product]"}]}},"parameter_descriptions":{"productId":"The product whose children to list"}},{"category":["Payment Services","Product API"],"name":"Product revisions","description":"Get older versions of a product template","path":"product\/{productId}\/revisions","pathParameters":["productId"],"method":"GET","url":"\/api\/2\/product\/{id}\/revisions","controller":"Api\/2\/Product.product_revisions","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":["content","subscriptions","deleted","unavailable","invisible","unselectable","available","bundle"],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of product objects, representing previous states of this product.","type":"[product]"}]}},"parameter_descriptions":{"productId":"The product to list revisions of"}},{"category":["Payment Services","Product API"],"name":"Product parents","description":"Get all \"parent\" products for the client","path":"products\/parents","pathParameters":[],"method":"GET","url":"\/api\/2\/products\/parents","controller":"Api\/2\/Product.products_parents","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":["content","subscriptions","deleted","unavailable","invisible","unselectable","available","bundle"],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of products","type":"[product]"}]}},"parameter_descriptions":{}},{"category":["Payment Services","Product API"],"name":"Product campaigns","description":"Get a list of all campaigns a product is included in","path":"product\/{productId}\/campaigns","pathParameters":["productId"],"method":"GET","url":"\/api\/2\/product\/{id}\/campaigns","controller":"Api\/2\/Product.product_campaigns","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of campaigns","type":"[campaign]"}]}},"parameter_descriptions":{"productId":"Unique ID of the product to find campaigns for"}},{"category":["Payment Services","Bundle API"],"name":"Update product bundle item","description":"Add or Update a Bundle Item","path":"bundle\/{bundleId}\/product\/{productId}","pathParameters":["id","product"],"method":"POST","url":"\/api\/2\/bundle\/{id}\/product\/{product}","controller":"Api\/2\/Bundle.bundle_item","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":["sort","price","vat"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the newly inserted bundle item","type":"bundle-item"}]}},"parameter_descriptions":{"bundleId":"ID of the bundle","productId":"ID of the product"}},{"category":["Payment Services","Bundle API"],"name":"Remove product bundle item","description":"Remove a Bundle Item from a Bundle","path":"bundle\/{id}\/product\/{product}","pathParameters":["id","product"],"method":"DELETE","url":"\/api\/2\/bundle\/{id}\/product\/{product}","controller":"Api\/2\/Bundle.bundle_item","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"DELETE":{"name":"DELETE","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"id":"","product":""}},{"category":["Payment Services","InjectToken API"],"name":"List token names","description":"List out token names for client","path":"injectable\/names","pathParameters":[],"method":"GET","url":"\/api\/2\/injectable\/names","controller":"Api\/2\/Injectable.token_names","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"[string]"}]}},"parameter_descriptions":{}},{"category":["Payment Services","InjectToken API"],"name":"Import tokens","description":"Content should be a valid json array. ie [123,\"string\",\"1as\"]","path":"injectable\/import","pathParameters":[],"method":"POST","url":"\/api\/2\/injectable\/import","controller":"Api\/2\/Injectable.token_import","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["tokenName","content"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"object"}]}},"parameter_descriptions":{"tokenName":"","content":""}},{"category":["Payment Services","Voucher API"],"name":"Get voucher","description":"Returns a voucher code data array, by VOUCHER COD, not ID","path":"voucher\/{voucherCode}","pathParameters":["voucherCode"],"method":"GET","url":"\/api\/2\/voucher\/{code}","controller":"Api\/2\/Voucher.voucher","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the voucher","type":"voucher"}]}},"parameter_descriptions":{"voucherCode":"Unique code of the voucher to retrieve"}},{"category":["Payment Services","Voucher API"],"name":"Generate voucher","description":"","path":"vouchers\/generate\/{voucherGroupId}","pathParameters":["voucherGroupId"],"method":"POST","url":"\/api\/2\/vouchers\/generate\/{id}","controller":"Api\/2\/Voucher.generate_vouchers","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":["amount"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a simple object indicating success of failure","type":"success-indicator"}]}},"parameter_descriptions":{"voucherGroupId":"ID of the voucher group to generate vouchers for","amount":"The number of unique vouchers to generate"}},{"category":["Payment Services","Voucher API"],"name":"Handout vouchers","description":"Return an amount of vouchers (that will change status to handout and no longer be available).","path":"vouchers\/handout\/{voucherGroupId}","pathParameters":["voucherGroupId"],"method":"POST","url":"\/api\/2\/vouchers\/handout\/{id}","controller":"Api\/2\/Voucher.handout_vouchers","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":[],"optional":["amount"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of vouchers","type":"[voucher]"}]}},"parameter_descriptions":{"voucherGroupId":"ID of the voucher group to hand out vouchers for","amount":"The number of vouchers to retrieve"}},{"category":["Payment Services","Voucher API"],"name":"Handout voucher to user","description":"Change status of a voucher to \"handed out\" and set the \"user_id\" on it, making it available only to this user.","path":"voucher_handout","pathParameters":[],"method":"POST","url":"\/api\/2\/voucher_handout","controller":"Api\/2\/Voucher.handout_voucher_to_user","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["userId","voucherGroupId"],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns an indication of success or failure","type":"success-indicator"}]}},"parameter_descriptions":{"userId":"ID of the user to give the voucher to","voucherGroupId":"The voucher group from which to hand out a voucher"}},{"category":["Payment Services","Voucher API"],"name":"List voucher groups","description":"Search for VoucherGroups. Title is exact match. `productId` for type `3`.","path":"vouchers\/groups","pathParameters":[],"method":"GET","url":"\/api\/2\/vouchers\/groups","controller":"Api\/2\/Voucher.voucher_groups","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","offset","title","campaignId","type","productId"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of voucher groups","type":"[voucher-group]"}]}},"parameter_descriptions":{"campaignId":"Find voucher-groups applicable to this campaign","title":"Find the voucher group with this title (exact match)","type":"Find voucher-groups of this [type](\/types\/voucher-type)","productId":"Find voucher groups applicable to this product (i.e. giveaways for this product)"}},{"category":["Payment Services","Voucher API"],"name":"Get and update voucher group","description":"Get a voucher group and update it. Will return voucher on non-unique.","path":"vouchers\/group\/{voucherGroupId}","pathParameters":["voucherGroupId"],"method":"*","url":"\/api\/2\/vouchers\/group\/{id}","controller":"Api\/2\/Voucher.voucher_group","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the voucher group","type":"voucher-group"}]},"POST":{"name":"POST","required":[],"optional":["title","description","limit"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated voucher group","type":"voucher-group"}]}},"parameter_descriptions":{"voucherGroupId":"ID of the voucher group","title":"New title","description":"New description","limit":"New limit"}},{"category":["Payment Services","Voucher API"],"name":"Create voucher group","description":"Create new voucher groups.","path":"vouchers\/group","pathParameters":[],"method":"POST","url":"\/api\/2\/vouchers\/group","controller":"Api\/2\/Voucher.voucher_group","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["title","type"],"optional":["campaignId","productId","description","unique","limit","voucherCode"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the newly created voucher group object","type":"voucher-group"}]}},"parameter_descriptions":{"title":"The voucher group's title","type":"[Voucher type](\/types\/voucher-type)","campaignId":"ID of the campaign vouchers will be used with","productId":"If creating a giveaway voucher group, this is the ID of the product vouchers will grant access to","description":"A textual description of the vouchers","unique":"If 1, each user receives a unique voucher code that can only redeemed once. If 0, a shared voucher will be issued, and the `limit` can be used to control the number of times it can be redeemed.","limit":"The maximum number of times the voucher can be redeemed, if it is a shared voucher","voucherCode":"A unique string"}},{"category":["Payment Services","Campaign API"],"name":"Get and update campaign","description":"Get a single campaign, with all it's products, or push changes to it.`products` must be an array of `productId` and `newPrice`. NB Products part doesnt work in explorer.","path":"campaign\/{campaignId}","pathParameters":["campaignId"],"method":"*","url":"\/api\/2\/campaign\/{id}","controller":"Api\/2\/Campaign.campaign","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the campaign object","type":"campaign"}]},"POST":{"name":"POST","required":[],"optional":["title","description","metaData","status","startDate","stopDate","additionalReceiptInfo","requireAddress","requireVoucher","limit","products"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the updated campaign object","type":"campaign"}]}},"parameter_descriptions":{"campaignId":"The ID of the campaign to update","title":"New campaign title","description":"New campaign description","metaData":"New meta-data","startDate":"New date\/time when the campaign becomes available","stopDate":"New date\/time when the campaign ceases to be available","additionalReceiptInfo":"New text to include in purchase receipts","requireAddress":"1 or 0. If 1, access to the campaign requires users to have a delivery address in their SPiD profile","requireVoucher":"1 or 0. If 1, access to the campaign requires users to have a valid and available voucher","limit":"New maximum number of purchases allowed for this campaign","products":"New list of products in this campaign"}},{"category":["Payment Services","Campaign API"],"name":"Create campaign","description":"","path":"campaign","pathParameters":[],"method":"POST","url":"\/api\/2\/campaign","controller":"Api\/2\/Campaign.campaign","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["title"],"optional":["description","metaData","startDate","stopDate","additionalReceiptInfo","requireAddress","requireVoucher","limit","products"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns the newly created campaign object","type":"campaign"}]}},"parameter_descriptions":{"description":"The campaign description","metaData":"Additional client meta-data, not used by SPiD","startDate":"Date\/time when the campaign becomes available","stopDate":"Date\/time when the campaign ceases to be available","additionalReceiptInfo":"Text to include in purchase receipts","requireAddress":"1 or 0. If 1, access to the campaign requires users to have a delivery address in their SPiD profile","requireVoucher":"1 or 0. If 1, access to the campaign requires users to have a valid and available voucher","limit":"The maximum number of purchases allowed for this campaign","products":"A list of products in this campaign"}},{"category":["Payment Services","Campaign API"],"name":"List campaigns","description":"List all campaigns for client","path":"campaigns","pathParameters":[],"method":"GET","url":"\/api\/2\/campaigns","controller":"Api\/2\/Campaign.campaigns","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","offset","sort","filters","campaignId","title","description","status"],"access_token_types":["server"],"filters":["updated","all","new","active","unavailable","deleted","products"],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of campaigns","type":"[campaign]"}]}},"parameter_descriptions":{"campaignId":"TODO","title":"TODO","description":"TODO","status":"Filter results by this status"}},{"category":["Payment Services","Payment API"],"name":"Get payment identifier","description":"Get a payment identifier by id","path":"identifier\/{identifierId}","pathParameters":["identifierId"],"method":"GET","url":"\/api\/2\/identifier\/{id}","controller":"Api\/2\/Identifier.identifier","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":"payment-identifier"}]}},"parameter_descriptions":{"identifierId":"ID of the payment identifier to retrieve"}},{"deprecated":"2.10","category":["Payment Services","Payment API"],"name":"Trigger sale","description":"Used by clients to trigger payment on user.","path":"payment","pathParameters":[],"method":"POST","url":"\/api\/2\/payment","controller":"Api\/2\/Payment.payment_create","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["action","productId","clientRef","agreementRef","hash"],"optional":["price"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"action":"","productId":"","clientRef":"","agreementRef":"","hash":"","price":""}},{"deprecated":"2.10","category":["Payment Services","Payment API"],"name":"Get payment","description":"Check status of a payment transaction.","path":"payment\/{id}","pathParameters":["id"],"method":"GET","url":"\/api\/2\/payment\/{id}","controller":"Api\/2\/Payment.payment","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"id":""}},{"deprecated":"2.10","category":["Payment Services","Payment API"],"name":"Search transactions","description":"Search for payment transactions.","path":"payments","pathParameters":[],"method":"GET","url":"\/api\/2\/payments","controller":"Api\/2\/Payment.payments","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["clientRef","userId","productId","status"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"clientRef":"","userId":"","productId":"","status":""}},{"deprecated":"2.10","category":["Payment Services","Payment API"],"name":"Get agreements","description":"Get the agreement(s) between the requesting client and a user","path":"agreements\/{userId}\/payment","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/agreements\/{id}\/payment","controller":"Api\/2\/Payment.agreements","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"","type":""}]}},"parameter_descriptions":{"userId":""}},{"category":["Identity Management","Login API"],"name":"Logins per user","description":"List all (or search for) logins for a user.","path":"logins\/{userId}","pathParameters":["userId"],"method":"GET","url":"\/api\/2\/logins\/{id}","controller":"Api\/2\/User.user_logins","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","since","offset","until","ip","status"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"Returns a list of login attempt objects","type":"[login-attempt]"}]}},"parameter_descriptions":{"userId":"The user's `userId` (not to be mistaken with the deprecated `id`).","ip":"Filter results by this IP address","status":"Filter results by this status"}},{"category":["Payment Services","Subscription API"],"name":"Search subscriptions","description":"Search for subscriptions","path":"subscriptions","pathParameters":[],"method":"GET","url":"\/api\/2\/subscriptions","controller":"Api\/2\/Subscriptions.subscriptions","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","offset","sort","since","until","filters","userId","status"],"access_token_types":["server"],"filters":["updated","expired","inactive","active","all","none"],"default_filters":[],"responses":[{"status":200,"description":"A list of Subscription objects.","type":"[subscription]"}]}},"parameter_descriptions":{"userId":"Limit results by the user's `userId` (not to be mistaken with the deprecated `id`).","status":"Limit results to subscriptions with this status."}},{"category":["Payment Services","Digital Contents API"],"name":"Search digital content","description":"Search for purchased digital content","path":"digitalcontents","pathParameters":[],"method":"GET","url":"\/api\/2\/digitalcontents","controller":"Api\/2\/Digitalcontents.digitalcontents","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","offset","sort","since","until","filters","userId","status","productId","parentProductId","orderId"],"access_token_types":["server"],"filters":["updated","expired","active","all","none"],"default_filters":[],"responses":[{"status":200,"description":"A list of DigitalContent objects.","type":"[digital-content]"}]}},"parameter_descriptions":{"userId":"Limit results to digital content purchased by this user.","status":"Limit results to digital content with this status.","productId":"Limit results to digital content for this product.","parentProductId":"Limit results to digital content for this product and its child products.","orderId":"Limit results to digital content in this order."}},{"category":["Insight","KPI API"],"name":"Search KPI","description":"Search for Key Performance Indicators","path":"kpis","pathParameters":[],"method":"GET","url":"\/api\/2\/kpis","controller":"Api\/2\/KeyPerformanceIndicator.kpi","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["name","limit","offset","sort","since","until"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"A list of KeyPerformanceIndicator objects","type":"[kpi]"}]}},"parameter_descriptions":{"name":"The name of one or more KPIs to query for, comma-separated. See the list of available KPIs above."}},{"category":["Payment Services","PayLink API"],"name":"Create PayLink","description":"Create a PayLink object","path":"paylink","pathParameters":[],"method":"POST","url":"\/api\/2\/paylink","controller":"Api\/2\/Paylink.paylink","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"POST":{"name":"POST","required":["title","items"],"optional":["clientReference","purchaseFlow","paymentOptions","expires","redirectUri","cancelUri","sellerUserId","buyerUserId"],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":201,"description":"Returns the newly created paylink object","type":"paylink"}]}},"parameter_descriptions":{"title":"The PayLink title. Displayed to the user on the payment page, and shown on the New Credit Card page at Payex.","items":"The items to be sold. A list of PayLink Item objects.","clientReference":"Your reference. Useful for tracking and processing the Order generated by this PayLink.","purchaseFlow":"Defaults to `DIRECT`, which will process the payment straight away. Can also be `AUTHORIZE`, where the payment is on hold and must later be captured.","paymentOptions":"The allowed payment methods for this PayLink. An integer bitmask: Credit (1), Credit cards (2), SMS (4), Invoice (8). Defaults to 2.","expires":"The date when the PayLink expires. A unix timestamp. Defaults to 24 hours from creation.","redirectUri":"Redirect the user to this URL after payment is complete.","cancelUri":"Redirect the user to this URL if login or payment is cancelled.","sellerUserId":"If set, this user is designated as the seller and will receive the payment.","buyerUserId":"If set, only this user has access to the PayLink."}},{"category":["Payment Services","PayLink API"],"name":"Get or delete a paylink","description":"Get or delete a Paylink object","path":"paylink\/{paylinkId}","pathParameters":["id"],"method":"*","url":"\/api\/2\/paylink\/{id}","controller":"Api\/2\/Paylink.paylink","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The paylink object","type":"paylink"}]},"DELETE":{"name":"DELETE","required":[],"optional":[],"access_token_types":["server"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"A paylink object, with its status changed to -1 (deleted)","type":"paylink"}]}},"parameter_descriptions":{"paylinkId":"ID of the paylink to retrieve."}},{"category":["Identity Management","Login API"],"name":"Search logins","description":"Query login attemps for a client.","path":"logins","pathParameters":[],"method":"GET","url":"\/api\/2\/logins","controller":"Api\/2\/User.logins","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":["limit","since","offset","until","ip","status","filters"],"access_token_types":["server"],"filters":["merchant"],"default_filters":[],"responses":[{"status":200,"description":"A list of login attempt objects.","type":"[login-attempt]"}]}},"parameter_descriptions":{"ip":"Filter login attempts by this IP address","status":"Filter login attempts by successful (`true`) or failed (`false`) logins","filters":"Set to `merchant` to show only login attempts for the current merchant."}},{"category":["Identity Management","Login API"],"name":"Logout","description":"Invalidate the user's SPiD session.","path":"logout","pathParameters":[],"method":"GET","url":"\/api\/2\/logout","controller":"Api\/2\/User.logout","default_output_format":"json","valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":["user"],"filters":[],"default_filters":[],"responses":[{"status":200,"description":"The response simply says \"OK\" when the user is logged out.","type":"string"}]}},"parameter_descriptions":{}},{"category":["Utilities","Platform API"],"name":"Not found error - 404","description":"Response when requesting an endpoint that does not exist.","method":"*","url":"\/api\/*","controller":"Api\/2\/Utility.not_found","default_output_format":"json","path":"api\/2\/*","pathParameters":[],"valid_output_formats":["json","jsonp"],"httpMethods":{"GET":{"name":"GET","required":[],"optional":[],"access_token_types":[],"filters":[],"default_filters":[],"responses":[{"status":404,"description":"No such endpoint.","type":"error"}]}},"parameter_descriptions":{}}]}