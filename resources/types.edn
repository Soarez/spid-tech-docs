;; Types used across many endpoints. Many types are defined inline for the
;; endpoints where they are used. If a type is used in more than one endpoint,
;; this is the place to define it, to enable cross-linking.

;; Types that don't have descriptions will not be linked. This is used for basic
;; types like strings and numbers.

{:string {:id :string}
 :boolean {:id :boolean}
 :integer {:id :integer}
 :object {:id :object}
 :date {:id :date
        :description "An ISO-8601 formatted date. The specific format used by the API is YYYY-MM-DD"}
 :datetime {:id :datetime
            :description "Date and time on the format `YYYY-MM-DD HH:MM:SS`"}
 :endpoint-response {:id :endpoint-response
                     :name "Endpoint response"
                     :description "A possible response from the API"
                     :rendering :object
                     :fields [{:name "status"      :type :integer :always-available? true :description "The HTTP response code"}
                              {:name "description" :type :string  :always-available? true :description "A description of what this response signifies, and in which cases it may arise"}
                              {:name "type"        :type :string  :always-available? true :description "The symbolic name of the formal type returned as `data` for this endpoint. The type definition is defined in the API documentation."}]}
 :http-method {:id :http-method
               :name "HTTP method"
               :rendering :object
               :description "A supported endpoint action"
               :fields [{:name "name"               :type :string              :always-available? true :description "The HTTP method (only GET, POST and DELETE are used by the API)"}
                        {:name "optional"           :type [:string]            :always-available? true :description "A list of optional request parameters."}
                        {:name "required"           :type [:string]            :always-available? true :description "A list of required request paramrters."}
                        {:name "responses"          :type [:endpoint-response] :always-available? true :description "A list of possible outcomes of taking this action."}
                        {:name "filters"            :type [:string]            :always-available? true :description "Supported filters."}
                        {:name "default_filters"    :type [:string]            :always-available? true :description "Default filters."}
                        {:name "access_token_types" :type [:string]            :always-available? true :description "Supported token types. May be server, user or both. If both, then this action may be taken with either access token type."}]}
 :endpoint {:id :endpoint
            :name "Endpoint"
            :rendering :object
            :description "Endpoint description. Provides information about the
API itself. Most of this information is displayed in the API documentation you
are now reading."
            :fields [{:name "category"               :type [:string]    :always-available? true :description "The service and API this endpoint is categorized under."}
                     {:name "name"                   :type :string      :always-available? true :description "Human-readable name of endpoint."}
                     {:name "path"                   :type :string      :always-available? true :description "The API-relative path, e.g. without the leading /api/2"}
                     {:name "pathParameters"         :type [:string]    :always-available? true :description "A list of parameters used in the path"}
                     {:name "method"                 :type :string      :always-available? true :description "Allowable methods, GET, POST, DELETE or '*', e.g. multiple methods. See http-methods for details."}
                     {:name "url"                    :type :string      :always-available? true :description "The full absolute path to this endpoint."}
                     {:name "valid_output_formats"   :type :string      :always-available? true :description "Possible ouput formats. Use by sending format=[name] as a request parameter."}
                     {:name "default_output_format"  :type :string      :always-available? true :description "The default output format, typically `json`."}
                     {:name "parameter_descriptions" :type :object      :always-available? true :description "An object with parameter docstrings. The property names of this object are names of either request parameters or path parameters, and the value is a description of the parameter's purpose."}
                     {:name "alias"                  :type :object      :description "Some parameters have aliases; names that may be used in their place. The property names in this object are parameter names and the value denotes which parameter it will map to. `\"id\": \"user_id\"` means that `id` is an alternative way to provide the `user_id` parameter."}
                     {:name "deprecated"             :type :string      :description "If deprecated, this string will indicate from which version it was deprecated."}
                     {:name "httpMethods"            :type :http-method :always-available? true :description "Details about the supported HTTP methods with their purpose and possible outcomes."}
                     {:name "controller"             :type :string      :always-available? true :description "The server-side controller. Should be ignored."}
                     {:name "description"            :type :string      :always-available? true}]}
 :name {:id :name
        :name "Name"
        :rendering :object
        :fields [{:name "givenName"  :type :string}
                 {:name "familyName" :type :string}
                 {:name "formatted"  :type :string :description "Formatted full name, including all middle names, titles and suffixes as appropiate"}]}
 :user-status {:id :user-status
               :name "User status"
               :rendering :enum
               :values [{:value "-3" :description "Deleted"}
                        {:value "-2" :description "Blocked from using the service"}
                        {:value "-1" :description "Inactive/disabled account"}
                        {:value "0" :description "Unverified"}
                        {:value "1" :description "Verified email/phone/etc"}]}
 :address {:id :address
           :name "Address"
           :rendering :object
           :fields [{:name "formatted" :type :string :description "Full address, formatted for display"}
                    {:name "streetAddress" :type :string :description "Full street address component. May include house number, street name, PO BOX, and multi-line extended street address information."}
                    {:name "postalCode" :type :string :description "Zip code."}
                    {:name "country" :type :string :description "Country name."}
                    {:name "locality" :type :string :description "City or locality"}
                    {:name "region" :type :string :description "State or region"}
                    {:name "latitude" :type :string :description "Latitude geo location"}
                    {:name "longitude" :type :string :description "Longitude geo location"}
                    {:name "altitude" :type :string :description "Altitude geo location"}
                    {:name "type" :type :string :description "Address type, home, shipping, invoice, etc"}]}
 :account {:id :account
           :name "Third-party account."
           :rendering :object
           :fields [{:name "id"          :type :string :description "Unique account id" :always-available? false}
                    {:name "domain"      :type :string :description "Top-most authoritative domain for the account, e.g. twitter.com" :always-available? false}
                    {:name "accountName" :type :string :description "Name of the account/service, e.g. 'Twitter'. For display purposes." :always-available? false}
                    {:name "username"    :type :string :description "Alpha-numeric username" :always-available? true}
                    {:name "userid"      :type :string :description "User/account id in the third-party service" :always-available? true}
                    {:name "profileUrl"  :type :string :description "The user's profile on the third-party service" :always-available? false}]}
 :email {:id :email
         :name "Email address"
         :rendering :object
         :fields [{:name "value"        :type :string   :description "The email address" :always-available? true}
                  {:name "type"         :type :string   :description "The type of email. Defaults to 'other'." :always-available? true}
                  {:name "primary"      :type :boolean  :description "If `true`, this is the user's primary email address." :always-available? false}
                  {:name "verified"     :type :boolean  :description "If `true`, the email is verified in SPiD by the user." :always-available? false}
                  {:name "verifiedTime" :type :datetime :description "When the user last verifided this email address." :always-available? false}
                  {:name "hidden"       :type :boolean  :description "TODO" :always-available? false}]}
 :phone-number {:id :phone-number
                :name "Phone number"
                :rendering :object
                :fields [{:name "value"        :type :string   :description "The phone nuber" :always-available? true}
                         {:name "type"         :type :string   :description "The type of phone number. Defaults to 'other'." :always-available? true}
                         {:name "primary"      :type :boolean  :description "If `true`, this is the user's primary phone number." :always-available? false}
                         {:name "verified"     :type :boolean  :description "If `true`, the phone number is verified in SPiD by the user." :always-available? false}
                         {:name "verifiedTime" :type :datetime :description "When the user last verifided this phone number." :always-available? false}]}
 :user {:id :user
        :name "User"
        :rendering :object
        :description "The user object is based on the [portable contacts
specification](http://portablecontacts.net/draft-spec.html). It is extended with
some custom fields. `userId` is an integer and represents the unique user ID.
`id` is a legacy uuid and should be ignored in new integrations. The `email` and
`phoneNumber` fields will always contain the primary used for both if available.
The corresponding *Verified fields are the date of the last time those were
verified."
        :fields [
                 {:name "id"                  :type :string         :description "Legacy `uuid`. Don't use. [Portable contacts](http://portablecontacts.net/draft-spec.html#anchor16)" :always-available? true}
                 {:name "userId"              :type :integer        :description "Unique user id. Custom extension." :always-available? true}
                 {:name "name"                :type :name           :description "The user's full name" :always-available? true}
                 {:name "displayName"         :type :string         :description "Name suitable for displaying to end-users." :always-available? true}
                 {:name "published"           :type :date-time      :always-available? true}
                 {:name "updated"             :type :date-time      :always-available? true}
                 {:name "status"              :type :user-status    :always-available? true}
                 {:name "email"               :type :string         :description "Primary email" :always-available? true}
                 {:name "emailVerified"       :type :string         :description "Date when the email was last verified"}
                 {:name "phoneNumber"         :type :string         :description "Primary phone number"}
                 {:name "phoneNumberVerified" :type :string         :description "Date when the phone number was last verified"}
                 {:name "verified"            :type :string         :description "Date when user last verified data (email, phone number)"}
                 {:name "url"                 :type :string}
                 {:name "photo"               :type :string         :description "URL to a photo of the user (GIF/JPG/PNG)"}
                 {:name "preferredUsername"   :type :string}
                 {:name "gender"              :type :string         :description "One of undisclosed, female, male. Default is undisclosed. [Portable contacts](http://portablecontacts.net/draft-spec.html#anchor16)" :always-available? true}
                 {:name "birthday"            :type :date           :description "Date of birth in YYYY-MM-DD format. Year will be 0000 if not provided. Defaults to 0000-00-00. [Portable contacts](http://portablecontacts.net/draft-spec.html#anchor16)" :always-available? true}
                 {:name "locale"              :type :string         :description "The user's preferred locale. Locales follow ISO Language and country codes respectively, joined by an underscore." :always-available? true}
                 {:name "utcOffset"           :type :string         :description "The user's timezone, given as offset from UTC." :always-available? true}
                 {:name "lastLoggedIn"        :type :datetime       :always-available? true}
                 {:name "lastAuthenticated"   :type :datetime       :description "The last time the user authenticated with their password" :always-available? true}
                 {:name "imported"            :type :datetime}
                 {:name "migrated"            :type :datetime}
                 {:name "addresses"           :type [:address]}
                 {:name "accounts"            :type [:account]      :description "Third-party accounts and other client services"}
                 {:name "emails"              :type [:email]        :always-available? true}
                 {:name "phoneNumbers"        :type [:phone-number]}
                 {:name "currentLocation"     :type [:address]}
                 {:name "tracking"            :type :boolean        :description "If `true`, the user has behavioral tracking enabled (pilot feature, may not remain as-is)"}]}
 :login-type {:id :login-type
              :name "Login type"
              :rendering :enum
              :values [{:value "normal"     :description "User provided email and password to log in."}
                       {:value "auto"       :description "Caused by an active 'remember me' cookie."}
                       {:value "thirdparty" :description "Logged in via third-party provider, such as Facebook, Google, etc."}
                       {:value "api"        :description "Logged in via the SPiD API (used by native mobile apps)."}]}
 :login-attempt {:id :login-attempt
                 :name "Login attempt object"
                 :description "This object contains details about a login attempt"
                 :rendering :object
                 :fields [{:name "id" :type :string}
                          {:name "clientid" :type :string}
                          {:name "merchantId" :type :integer}
                          {:name "email" :type :string}
                          {:name "userid" :type :string}
                          {:name "userAgent" :type :string}
                          {:name "created" :type :date}
                          {:name "type" :type :login-type}
                          {:name "ip" :type :string :description "Originating IP address"}
                          {:name "initalReferer" :type :string :description "Referer from which the user came from"}
                          {:name "referer" :type :string :description "Referer from which the login attempt came from"}
                          {:name "trackingRef" :type :string :description "Client-provided unique visitor reference. Used for tracking"}
                          {:name "trackingTag" :type :string :description "Client-provided string. Used for custom order tracking"}
                          {:name "status" :type :string :description "`\"true\"` if login was successful, `\"false\"` if not"}
                          {:name "hash" :type :string :description "An md5 hash of email+ip+userAgent. Used to identify login attempt patterns"}]}
 :version {:id :version
           :name "Version object"
           :rendering :object
           :fields [{:name "apiVersion"  :type :integer :always-available? true}
                    {:name "apiRevision" :type :string  :always-available? true}
                    {:name "webVersion" :type :string :always-available? true}
                    {:name "webRevision" :type :string :always-available? true}
                    {:name "currentTime" :type :datetime :always-available? true}
                    {:name "timeZone" :type :string :always-available? true}]}
 :terms {:id :terms
         :name "Terms"
         :rendering :object
         :fields [{:name "terms"    :type :string  :always-available? true :description "The current terms, as HTML"}
                  {:name "accepted" :type :boolean :always-available? true :description "If requested with a user token, this field is `true` if the user has accepted the terms."}]}
 :exchange {:id :exchange
            :name "OAuth exchange object"
            :rendering :object
            :fields [{:name "code" :type :string :always-available? true :description "An OAuth access token"}]}
 :email-template {:id :email-template
                  :name "Email template"
                  :rendering :object
                  :fields [{:name "layout" :type :string :always-available? true}
                           {:name "subject" :type :string :always-available? true :description "The email subject"}
                           {:name "template" :type :string :always-available? true}
                           {:name "tokens" :type :string :always-available? true}]}
 :email-template-collection {:id :email-template-collection
                             :name "Email template collection"
                             :rendering :object
                             :fields [{:name "change_password_notification" :type :email-template}
                                      {:name "post_expiration_autorenew_subscription_fail" :type :email-template}
                                      {:name "confirm_email_address" :type :email-template}
                                      {:name "sms_purchase_non_subscription_receipt" :type :email-template}
                                      {:name "confirm_email_address_without_password_with_redirect" :type :email-template}
                                      {:name "api_verify_email" :type :email-template}
                                      {:name "post_expiration_payment_identifier" :type :email-template}
                                      {:name "confirm_email_address_without_password" :type :email-template}
                                      {:name "new_verification_code" :type :email-template}
                                      {:name "post_expiration_autorenew_subscription_ok" :type :email-template}
                                      {:name "sms_purchase_non_auto_renewal_subscription_receipt" :type :email-template}
                                      {:name "confirm_email_address_with_password" :type :email-template}
                                      {:name "added_secondary_email_notification" :type :email-template}
                                      {:name "pre_expiration_autorenew_subscription_on" :type :email-template}
                                      {:name "pre_expiration_payment_identifier" :type :email-template}
                                      {:name "post_deletion_payment_identifier" :type :email-template}
                                      {:name "pre_expiration_autorenew_subscription_off" :type :email-template}
                                      {:name "sms_purchase_auto_renewal_subscription_receipt" :type :email-template}
                                      {:name "confirm_email_address_without_password_without_redirect" :type :email-template}
                                      {:name "post_thirdparty_signup" :type :email-template}]}
 :data-object {:id :data-object
               :name "Data object"
               :rendering :object
               :fields [{:name "dataObjectId" :type :integer  :always-available? true :description "Unique data object ID"}
                        {:name "clientId"     :type :string   :always-available? true :description "The ID of the client who created the data object"}
                        {:name "merchantId"   :type :integer  :always-available? true :description "The ID of the merchant the client belongs to"}
                        {:name "userId"       :type :integer  :always-available? true :description "The user the data is associated with"}
                        {:name "key"          :type :string   :always-available? true :description "Client-provided key, e.g. the 'name' of this data. Max length is 255 bytes."}
                        {:name "value"        :type :string   :always-available? true :description "Client-provided value. Max length is 65535 bytes."}
                        {:name "updated"      :type :datetime :always-available? true :description "When this value was last updated"}
                        {:name "created"      :type :datetime :always-available? true :description "When this value was originally created"}]}
 :status {:id :status
          :name "API Status"
          :rendering :object
          :fields [{:name "oauth"       :type :object   :always-available? true}
                   {:name "apiVersion"  :type :integer  :always-available? true}
                   {:name "apiRevision" :type :string   :always-available? true}
                   {:name "webVersion"  :type :string   :always-available? true}
                   {:name "webRevision" :type :string   :always-available? true}
                   {:name "currentTime" :type :datetime :always-available? true}
                   {:name "timeZone"    :type :string   :always-available? true}
                   {:name "block"       :type :boolean  :always-available? true}
                   {:name "platform"    :type :string   :always-available? true :description "'up' if the API is fully operational. Other values will likely indicate some level of reduced operation."}]}
 :success-indicator {:id :success-indicator
                     :name "Success indicator"
                     :rendering :object
                     :fields [{:name "success" :type :boolean}]}
 :api-exception {:id :api-exception
                 :name "API Exception"
                 :rendering :object
                 :fields [{:name "code"        :type :integer :description "The HTTP response code"}
                          {:name "type"        :type :string  :description "The type of error, usually 'ApiException'"}
                          {:name "description" :type :string}]}
 :email-status {:id :email-status
                :name "Email status"
                :rendering :object
                :fields [{:name "exists"    :type :boolean :description "If `true`, this email address exists in some form in SPiD"}
                         {:name "available" :type :boolean :description "If `true`, this email address may be used to register a new account"}
                         {:name "verified"  :type :boolean :description "If `true`, the owner has verified this address in SPiD."}]}}
